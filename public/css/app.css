@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400&subset=vietnamese);@charset "UTF-8";

*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
}

@-ms-viewport {
  width: device-width;
}

article,
aside,
dialog,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}

[tabindex="-1"]:focus {
  outline: none !important;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  overflow: visible;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: .5rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: bold;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

dfn {
  font-style: italic;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

a {
  color: #50b4c3;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:hover {
  color: #338794;
  text-decoration: none;
}

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus,
a:not([href]):not([tabindex]):hover {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus {
  outline: 0;
}

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
}

figure {
  margin: 0 0 1rem;
}

img {
  vertical-align: middle;
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

table {
  border-collapse: collapse;
}

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #868e96;
  text-align: left;
  caption-side: bottom;
}

th {
  text-align: inherit;
}

label {
  display: inline-block;
  margin-bottom: .5rem;
}

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto;
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: none;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none !important;
}

h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  margin-bottom: 10px;
  font-family: "Roboto Condensed";
  font-weight: 300;
  line-height: 1.1;
  color: inherit;
}

h1,
.h1 {
  font-size: 2.5rem;
}

h2,
.h2 {
  font-size: 2rem;
}

h3,
.h3 {
  font-size: 1.75rem;
}

h4,
.h4 {
  font-size: 1.5rem;
}

h5,
.h5 {
  font-size: 1.25rem;
}

h6,
.h6 {
  font-size: 1rem;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: 6rem;
  font-weight: 300;
  line-height: 1.1;
}

.display-2 {
  font-size: 5.5rem;
  font-weight: 300;
  line-height: 1.1;
}

.display-3 {
  font-size: 4.5rem;
  font-weight: 300;
  line-height: 1.1;
}

.display-4 {
  font-size: 3.5rem;
  font-weight: 300;
  line-height: 1.1;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

small,
.small {
  font-size: 80%;
  font-weight: normal;
}

mark,
.mark {
  padding: 0.2em;
  background-color: #fcf8e3;
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}

.list-inline-item:not(:last-child) {
  margin-right: 5px;
}

.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 20px;
  font-size: 1.25rem;
}

.blockquote-footer {
  display: block;
  font-size: 80%;
  color: #868e96;
}

.blockquote-footer::before {
  content: "\2014   \A0";
}

/******************************************************************/

/** MIXIN *********************************************************/

/******************************************************************/

ul.no-style {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**************************/

/** TYPOGRAPHY ************/

/**************************/

.heading,
body#frontend section#sidebar nav#sidebar-menu ul li a {
  font-family: "Roboto Condensed";
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-small {
  font-size: 0.85rem;
}

.text-tiny {
  font-size: 0.7rem;
}

.text-bold {
  font-weight: bold;
}

.text-color-primary {
  color: #50b4c3;
}

.text-color-secondary {
  color: #868e96;
}

.text-color-success {
  color: #93cb9a;
}

.text-color-danger {
  color: #f0b7bd;
}

.text-color-info {
  color: #99e3ec;
}

.text-color-warning {
  color: #f3e88e;
}

.text-color-light {
  color: #f8f9fa;
}

.text-color-dark {
  color: #343a40;
}

/**************************/

/** BOX SHADOW ************/

/**************************/

.z-depth-0 {
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
}

.z-depth-1 {
  -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
}

.z-depth-2 {
  -webkit-box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3);
}

.z-depth-3 {
  -webkit-box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.3);
}

.z-depth-4 {
  -webkit-box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.3);
          box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.3);
}

.z-depth-5 {
  -webkit-box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);
          box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.3);
}

.round-border {
  border-radius: 50%;
}

img.fit,
svg.fit {
  width: 100%;
  height: 100%;
}

/******************************************************************/

/** FORM **********************************************************/

/******************************************************************/

.form-unit {
  display: block;
  clear: both;
  width: 100%;
  margin-bottom: 1.5rem;
  line-height: 1.5;
}

.form-unit label[for] {
  display: inline-block;
  margin-bottom: 0.5rem;
}

.form-unit .form-control {
  display: block;
  width: 100%;
  line-height: 1.25;
  font-size: 1rem;
  padding: 0.5rem 0.75rem;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0;
  color: #343a40;
  background-color: #ffffff;
  -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
}

.form-unit .form-control:focus {
  color: #495057;
  border-color: #80bdff;
  outline: 0;
}

.form-unit input[type=file].form-control {
  border: none;
}

.form-unit.label-inline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.form-unit.label-inline label[for] {
  display: block;
  line-height: 1;
  padding: 10px 20px 0 20px;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-right: none;
  background: #e9ecef;
}

/******************************************************************/

/** BUTTONS *******************************************************/

/******************************************************************/

.btn {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 1px solid transparent;
  padding: .5rem .75rem;
  font-size: 1rem;
  line-height: 1.25;
  border-radius: 0;
  -webkit-transition: all .15s ease-in-out;
  transition: all .15s ease-in-out;
  cursor: pointer;
}

.btn-primary {
  color: #fff;
  background-color: #50b4c3;
  border-color: #50b4c3;
}

/******************************************************************/

/** BACKGROUND ****************************************************/

/******************************************************************/

.background-primary {
  background: #50b4c3;
}

.background-secondary {
  background: #868e96;
}

.background-success {
  background: #93cb9a;
}

.background-danger {
  background: #f0b7bd;
}

.background-info {
  background: #99e3ec;
}

.background-warning {
  background: #f3e88e;
}

svg.icon {
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  line-height: 1em;
  margin-left: .2em;
  height: 1em;
  font-size: 110%;
}

.message-box {
  display: block;
  width: 100%;
  margin: 1rem 0;
  font-size: 1.1rem;
  background: #ffffff;
  position: relative;
}

.message-box .message {
  padding: 1rem 2rem;
  display: block;
}

.message-box:before {
  display: block;
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 0.4rem;
}

.message-box:after {
  font-family: "Roboto Condensed";
  font-weight: 300;
  display: block;
  position: absolute;
  right: 1rem;
  top: 0;
  bottom: 0;
  padding: 0.3rem 0.7rem;
  margin: 0.8rem 0 0.8rem;
  text-transform: uppercase;
  font-size: 0.9rem;
  color: #ffffff;
  word-spacing: 2px;
  letter-spacing: 0.5px;
}

.message-box.success {
  border: 1px solid #93cb9a;
}

.message-box.success:before {
  background: #93cb9a;
}

.message-box.success:after {
  background: #93cb9a;
  content: "Th\E0nh c\F4ng";
}

.message-box.info {
  border: 1px solid #868e96;
}

.message-box.info:before {
  background: #868e96;
}

.message-box.info:after {
  background: #868e96;
  content: "Th\F4ng tin";
}

.message-box.error {
  border: 1px solid #f0b7bd;
}

.message-box.error:before {
  background: #f0b7bd;
}

.message-box.error:after {
  background: #f0b7bd;
  content: "Th\1EA5t b\1EA1i";
}

.container {
  min-width: 560px;
  width: 80%;
  max-width: 2160px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-right: 10px;
  padding-left: 10px;
}

.container-fluid {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 10px;
  padding-left: 10px;
}

.row.vertical-direction {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-right: -10px;
  margin-left: -10px;
  margin-bottom: 20px;
}

.row.vertical-aligns {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.row.horizontal-aligns {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.row > .col {
  position: relative;
  min-height: 1px;
  padding-right: 10px;
  padding-left: 10px;
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0px;
          flex: 1 1 0;
}

.align-center {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.justify-center {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.row > .col.fixed {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
}

.row > .col.align-flex-end {
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.box {
  padding: 20px;
}

.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.wrapper.viewport {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

div.container.isolate::before,
div.container.isolate::after {
  width: 100%;
  height: 3rem;
  display: block;
  content: "";
}

@media screen and (orientation: portrait) {
  .container {
    width: 100vw;
    margin: 0;
    min-width: unset;
    max-width: unset;
    padding: 0;
  }

  .stack-on-portrait {
    width: 100% !important;
    -webkit-box-flex: 0 !important;
        -ms-flex: 0 0 100% !important;
            flex: 0 0 100% !important;
  }

  div.container.isolate::before,
  div.container.isolate::after {
    height: 1rem;
  }

  .hide-on-portrait {
    display: none !important;
  }
}

@media screen and (orientation: landscape) {
  .hide-on-landscape {
    display: none !important;
  }
}

div.login-background {
  background: #003973;
  /* fallback for old browsers */
  /* Chrome 10-25, Safari 5.1-6 */
  background: -webkit-gradient(linear, left top, right top, from(#E5E5BE), to(#003973));
  background: linear-gradient(to right, #E5E5BE, #003973);
  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}

.facebook-login {
  background: #4C69BA;
  border-radius: 3px;
  color: #ffffff;
  margin: 40px 60px 0;
  -webkit-transition: background 0.2s ease;
  transition: background 0.2s ease;
}

.facebook-login span {
  margin: 0 5px 0 0;
}

.facebook-login svg {
  margin: 5px;
}

.facebook-login:hover {
  background: #3b5398;
  color: #ffffff;
}

.login-section {
  -webkit-transform: translateY(-10%);
          transform: translateY(-10%);
}

.login-box {
  background: #ffffff;
  position: relative;
  border-radius: 2px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-width: 60vw;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.login-title {
  color: #ffffff;
  margin: 0 0 3rem 0;
}

.login-box--inside {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 50%;
          flex: 1 1 50%;
  width: 50%;
}

.login-box--inside .site-logo {
  width: 30%;
  display: block;
  margin: 2rem auto;
  stroke: #50b4c3;
  fill: #50b4c3;
}

.login-box--inside .site-logo .cls-1,
.login-box--inside .site-logo .cls-3 {
  fill: #50b4c3;
  stroke: #50b4c3;
}

/**
* global
*/

#app.admin {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

section[role=sidebar] {
  float: left;
  width: 250px;
  background: #495057;
  color: #f8f9fa;
}

section[role=sidebar] header.site-name {
  height: 3rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background: #343a40;
  padding-top: 10px;
}

section[role=sidebar] header.site-name a,
section[role=sidebar] header.site-name a:hover {
  color: #f8f9fa;
}

section[role=sidebar] div[role=userinfo] {
  padding: 1rem;
  position: relative;
}

section[role=sidebar] div[role=userinfo] div.avatar {
  width: 100px;
  height: 100px;
  margin: 0 auto;
}

section[role=sidebar] div[role=userinfo] div.avatar img {
  border-radius: 50%;
  width: 100%;
  height: 100%;
}

section[role=sidebar] div[role=userinfo] .logout-link {
  width: 25px;
  height: 25px;
  position: absolute;
  top: 55px;
  right: 30px;
  font-size: 140%;
}

section[role=sidebar] div[role=userinfo] div.user {
  padding: 0.5rem 0;
  font-size: 1.2rem;
}

section[role=sidebar] div[role=section-selection] div.section > label,
section[role=sidebar] div[role=section-selection] div.section > a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  background: #555b61;
  padding: 0.5rem 0 0.5rem 1rem;
  cursor: pointer;
  -webkit-transition: background 0.2s ease;
  transition: background 0.2s ease;
  margin: 0;
  color: inherit;
  position: relative;
}

section[role=sidebar] div[role=section-selection] div.section > label:hover,
section[role=sidebar] div[role=section-selection] div.section > a:hover,
section[role=sidebar] div[role=section-selection] div.section > label.active,
section[role=sidebar] div[role=section-selection] div.section > a.active {
  background: #3d4349;
}

section[role=sidebar] div[role=section-selection] div.section input[type=checkbox].controller {
  position: absolute;
  top: -99999px;
  left: -999999px;
}

section[role=sidebar] div[role=section-selection] div.section div.controlled {
  -webkit-transition: max-height 0.2s  0.1s;
  transition: max-height 0.2s  0.1s;
  max-height: 0;
  -webkit-transform-origin: top center;
          transform-origin: top center;
  overflow: hidden;
}

section[role=sidebar] div[role=section-selection] div.section input[type=checkbox].controller:checked ~ div.controlled {
  max-height: 5rem;
}

section[role=sidebar] div[role=section-selection] div.section div.controlled > ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

section[role=sidebar] div[role=section-selection] div.section div.controlled > ul li {
  display: block;
  padding: 0;
}

section[role=sidebar] div[role=section-selection] div.section div.controlled > ul li a {
  color: inherit;
  display: block;
  padding: 0.5rem 1rem 0.5rem 2.5rem;
  -webkit-transition: background 0.2s ease;
  transition: background 0.2s ease;
}

section[role=sidebar] div[role=section-selection] div.section div.controlled > ul li a:hover,
section[role=sidebar] div[role=section-selection] div.section div.controlled > ul li a.active {
  background: #50b4c3;
}

section[role=content] {
  float: left;
  width: calc(100% - 250px);
  background: #f8f9fa;
}

section[role=content] header.breadcumb {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 3rem;
  background: #e9ecef;
  padding-left: 2rem;
}

section[role=content] header.breadcumb span.parent {
  font-size: 1.1rem;
  color: #868e96;
}

section[role=content] header.breadcumb span.current {
  font-size: 1.1rem;
}

section[role=content] header.breadcumb span.parent:after {
  content: ">";
  padding: 0 0.3rem 0 0.2rem;
  font-family: "Roboto Condensed";
}

section[role=content] main.content {
  padding: 2rem;
  min-height: calc(100vh - 3rem);
}

section[role=content] main.content div[role=head]:after {
  display: block;
  content: "";
  background: #868e96;
  height: 5px;
  width: 15%;
  margin-bottom: 20px;
}

section[role=credit] {
  padding-top: 0.5rem;
  background: #eff1f4;
  padding-left: 250px;
  position: relative;
}

section[role=credit]:before {
  display: block;
  content: "";
  background: #495057;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 250px;
}

section[role=credit] p {
  margin-bottom: 0.5rem;
}

/*****************************************************************************************************/

/** DASHBOARD ****************************************************************************************/

/*****************************************************************************************************/

a.dashboard-card {
  display: block;
  margin: 15px 30px 0;
  padding: 20px 0 20px 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  background: #ffffff;
}

div#album-singular form.delete-album {
  position: absolute;
  top: 82px;
  right: 30px;
}

div#album-singular .controls input[type=radio] {
  visibility: hidden;
}

div#album-singular .controls label {
  text-transform: uppercase;
  padding: 0.3rem 1rem;
  cursor: pointer;
  -webkit-transition: background 0.2s ease, color 0.2s ease;
  transition: background 0.2s ease, color 0.2s ease;
  margin: 0 -10px;
  position: relative;
}

div#album-singular .controls input[type=radio]:checked + label {
  background: #93cb9a;
  color: #ffffff;
}

div#album-singular .controls label:before {
  display: block;
  position: absolute;
  background: #868e96;
  content: "";
  bottom: -5px;
  left: 0;
  right: 0;
  height: 3px;
  -webkit-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transition: -webkit-transform 0.2s ease;
  transition: -webkit-transform 0.2s ease;
  transition: transform 0.2s ease;
  transition: transform 0.2s ease, -webkit-transform 0.2s ease;
}

div#album-singular .controls input[type=radio]:not(:checked) + label:hover:before {
  -webkit-transform: scaleX(1);
          transform: scaleX(1);
}

div#album-singular .photo-container {
  margin-bottom: 20px;
  position: relative;
}

div#album-singular .photo-container .delete-photo {
  position: absolute;
  z-index: 0;
  visibility: hidden;
}

div#album-singular .photo-container .photo-content {
  margin-bottom: 0;
}

div#album-singular .photo-container .delete-photo:disabled + .photo-content {
  cursor: move;
}

div#album-singular .photo-container .delete-photo:not(:disabled) + .photo-content {
  cursor: pointer;
  position: relative;
}

div#album-singular .photo-container .delete-photo:not(:disabled) + .photo-content img {
  position: relative;
  z-index: 999;
}

div#album-singular .photo-container .delete-photo:not(:disabled) + .photo-content:before {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #f0b7bd;
  display: block;
  content: "";
  z-index: 99;
  -webkit-transition: -webkit-transform 0.15s ease 0s;
  transition: -webkit-transform 0.15s ease 0s;
  transition: transform 0.15s ease 0s;
  transition: transform 0.15s ease 0s, -webkit-transform 0.15s ease 0s;
}

div#album-singular .photo-container .delete-photo:checked + .photo-content:before {
  -webkit-transform: scale(1.05);
          transform: scale(1.05);
}

div#album-singular .photo-container.sortable-ghost {
  background: #ffffff;
  cursor: pointer;
}

div#album-singular .photo-container.sortable-ghost > .photo-content > img {
  visibility: hidden;
}

div#album-singular .photo-container.sortable-ghost:before {
  border: 3px dashed #50b4c3;
  display: block;
  content: "";
  width: 200px;
  height: 200px;
  position: absolute;
}

#album_list .album-container .album-content img {
  width: 300px;
  height: 300px;
  -o-object-fit: cover;
     object-fit: cover;
}

#album_list .album-container .album-content .album-meta {
  text-align: center;
  padding: 1rem 0 0.5rem;
}

body#frontend section#sidebar {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: 100px;
  background-color: #161616;
  background-image: repeating-linear-gradient(to bottom, black 0%, #2c2c2c 100%);
  color: #f8f9fa;
  margin: 0;
}

body#frontend section#sidebar .col {
  padding: 0;
}

body#frontend section#sidebar .logo {
  margin: 20px;
}

body#frontend section#sidebar .logo svg {
  fill: #ffffff;
  stroke: #ffffff;
  width: 60px;
  height: 60px;
  margin: 0;
}

body#frontend section#sidebar .page-name {
  display: none;
  text-transform: uppercase;
  text-align: center;
  word-spacing: 100vw;
  font-size: 1.2rem;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 0.5s ease;
  transition: max-height 0.5s ease;
}

body#frontend section#sidebar .logo:hover + .page-name {
  max-height: 200px;
}

body#frontend section#sidebar nav#sidebar-menu ul li {
  text-align: center;
  padding: 0.2rem 0;
  position: relative;
  margin: 0.1rem 0;
}

body#frontend section#sidebar nav#sidebar-menu ul li a {
  color: #f8f9fa;
  text-transform: uppercase;
  font-size: 0.8rem;
  display: block;
}

body#frontend section#sidebar nav#sidebar-menu ul li:before {
  display: block;
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: -10px;
  width: 3px;
  background: transparent;
  -webkit-transition: background 0.2s ease;
  transition: background 0.2s ease;
}

body#frontend section#sidebar nav#sidebar-menu ul li:hover:before {
  background: #fcd549;
}

body#frontend section#sidebar div#loading-indicator {
  height: 200px;
  background: #adb5bd;
}

body#frontend section#sidebar div.facebook-contact a {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 999;
  background: #fcd549;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  color: #495057;
  text-transform: uppercase;
  opacity: 0;
  -webkit-transition: opacity 0.2s ease;
  transition: opacity 0.2s ease;
}

body#frontend section#sidebar div.facebook-contact a span {
  width: 100%;
  text-align: center;
  margin-bottom: 0;
}

body#frontend section#sidebar div.facebook-contact img {
  position: relative;
  width: 100px;
  height: 100px;
}

body#frontend section#sidebar div.facebook-contact:hover a {
  opacity: 1;
}

body#frontend section#content {
  margin-left: 100px;
  background: #cdcdcd;
  min-height: 100vh;
}

body#frontend section#content nav#top-menu {
  background: #495057;
  height: 30px;
  line-height: 30px;
}

body#frontend section#content #album-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

body#frontend section#content #album-list > .album-bits {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto;
  display: block;
  width: calc(100% / 3);
}

body#frontend section#content #album-list > .album-bits > img {
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  height: 100%;
}

body#frontend section#content #album-list .album-bits.latest {
  width: 100%;
  height: 50vh;
  min-height: 500px;
}

body#frontend section#content #album-list .album-bits:not(.latest) > img {
  -webkit-filter: grayscale(1);
          filter: grayscale(1);
  -webkit-transition: -webkit-filter 0.2s ease;
  transition: -webkit-filter 0.2s ease;
  transition: filter 0.2s ease;
  transition: filter 0.2s ease, -webkit-filter 0.2s ease;
}

body#frontend section#content #album-list .album-bits:not(.latest):hover > img {
  -webkit-filter: none;
          filter: none;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/